//* ডাটা টাইপ কাক বোলে? (What is a Data Type?)
//* ডাটা টাইপ বুজায়, কোনো ভেৰিয়েবলত (variable) থকা ডাটা বা মানৰ প্ৰকৃতি। মানে ভেৰিয়েবলটোত পূৰ্ণসংখ্যা (integer), দশমিক সংখ্যা (decimal), পাঠ্য (text), সত্য-মিছা (true/false), তালিকা (list), বা অন্য কিছুমান মান থাকে। ডাটা টাইপ ব্যৱহাৰ কৰাৰ সুবিধা হৈছে – প্ৰোগ্ৰামক শক্তিশালী আৰু ভুলমুক্ত কৰিবলৈ সহায় কৰে।

//* ডার্ট (Dart) এক statically typed ভাষা, অৰ্থাৎ ভেৰিয়েবলৰ টাইপ ঘোষণা কৰিব লাগে (বা ডাৰ্ট নিজেই সি অনুমান কৰিব পাৰে)। টাইপ ঘোষণা কৰাৰ সুবিধা হৈছে, এটা ভেৰিয়েবলত ভুল টাইপৰ মান থকাত ডাৰ্টে ত্ৰুটি দেখুৱায়।

//* ডাৰ্টৰ মুল ডাটা টাইপসমূহ (Data Types in Dart)
//* ডার্টত ডাটা টাইপসমূহ প্ৰধানত ৩ প্ৰকাৰৰ:

//* প্ৰাথমিক টাইপ (Primitive Types): int, double, bool, String
// জটিল টাইপ (Complex Types): List, Map, Set
// বিশেষ টাইপ (Special Types): dynamic, var, null


//* 1. int (ইন্টিজাৰ): পূৰ্ণসংখ্যাৰ টাইপ
//* ই পূৰ্ণসংখ্যাৰ মান সংৰক্ষণ কৰে। এই টাইপত কোনো দশমিক মান সঞ্চয় কৰিব নোৱাৰি।

//* উদাহৰণ:

// void main() {
// int age = 25; // পূৰ্ণসংখ্যা মান
// print("Age is $age");
// }

//* বৈশিষ্ট্য:
// ই পৰিসৰ (range) সুৰক্ষিত কৰে।
// ডাৰ্টে পূৰ্ণসংখ্যাৰ গণিত সঠিকভাৱে কৰে।


//* 2. double: দশমিক সংখ্যা বা ভগ্নাংশ
//* ই ভগ্নাংশ (fractional) বা দশমিক মান সংৰক্ষণ কৰে। পূৰ্ণসংখ্যাৰ বিপৰীতে ইয়াত দশমিক বিন্দু থাকে।

//* উদাহৰণ:

// void main() {
// double height = 5.9; // দশমিক সংখ্যা
// print("Height is $height");
// }

//* বৈশিষ্ট্য:
// বিজ্ঞান বা গণিতৰ গণনাত ব্যৱহৃত হয়।


//* 3. String (ষ্ট্ৰিং): পাঠ্য টাইপ
//* ষ্ট্ৰিং টেক্সট (text) বা চৰসমূহ (characters)ৰ শ্ৰেণী। দ্বৈত উদ্ধৃতি বা একক উদ্ধৃতিৰে লিখা হয়।
//* উদাহৰণ:

// void main() {
// String name = "অৰুণ";
// print("Name is $name");
// }

//* বিশেষত্ব:
// ষ্ট্ৰিং একত্ৰিত কৰিবলৈ $ চিহ্ন ব্যৱহাৰ কৰা হয়।
// মাল্টি-লাইন ষ্ট্ৰিং ''' বা """ ব্যৱহাৰ কৰি লিখা যায়।
// মাল্টি-লাইন উদাহৰণ:

// void main() {
//   String address = '''
// নাম: ৰাজ
// স্থান: গুৱাহাটী
// ''';
//   print(address);
// }



//* 4. bool (বুলিয়ান): সত্য-মিছা টাইপ
//* ই true বা false সংৰক্ষণ কৰে। তুলনামূলক পৰীক্ষা বা শর্তাধীন প্ৰশ্নত ব্যৱহৃত হয়।
//* উদাহৰণ:

// void main() {
//   bool isStudent = true; // সত্য
//   print("Is Student? $isStudent");
// }


//* 5. List (লিষ্ট): তালিকাসমূহ সংৰক্ষণ
//* লিষ্ট হৈছে একাধিক মানৰ শ্ৰেণীবদ্ধ তালিকা।

//* উদাহৰণ:

// void main() {
//   List<String> names = ["অৰুণ", "বিনয়", "চন্দন"];
//   print("Names: $names");
// }

//* বৈশিষ্ট্য:
//* তালিকাত সূচী (index) 0 ৰ পৰা আৰম্ভ হয়।
// মিশ্ৰ টাইপৰ মানও ৰাখিব পাৰে।
//* উদাহৰণ:
// List<dynamic> mixedList = [10, "Hello", true];



//* 6. Map (মেপ): কী-মান জোড় (key-value pair)
//* মেপত ডাটা কী (key) আৰু মান (value)ৰ ৰূপত সংৰক্ষণ হয়।

//* উদাহৰণ:

// void main() {
//   Map<String, int> scores = {"অৰুণ": 90, "বিনয়": 85};
//   print("Scores: $scores");
// }


//* 7. Set (চেট): অনন্য মানৰ সংৰক্ষণ
//* চেটত ডুপ্লিকেট মান সংৰক্ষণ নহয়। ই অনন্য ডাটাৰ সৈতে কাম কৰে।

//* উদাহৰণ:

// void main() {
//   Set<int> numbers = {1, 2, 3, 3, 4};
//   print("Numbers: $numbers"); // 3 একবাৰহে দেখুওৱা হ’ব
// }

//* 8. dynamic (ডাইনামিক): যিকোনো টাইপৰ মান সংৰক্ষণ
//* dynamic টাইপত যিকোনো ধৰণৰ ডাটা সংৰক্ষণ কৰিব পৰা যায়। ডাইনামিক টাইপৰ মান পৰিৱর্তন কৰিব পৰা যায়।

//* উদাহৰণ:
// void main() {
//   dynamic value = 10;
//   print("Value: $value");
//   value = "Text";
//   print("Value: $value");
// }


//* 9. var: ভেৰিয়েবল টাইপৰ অনুমান
//* var ব্যৱহাৰ কৰিলে ডার্টে নিজে টাইপ ঠিক কৰে।

//* উদাহৰণ:
// void main() {
//   var name = "অৰুণ"; // ডাৰ্টে ইয়াক String হিচাপে ধৰে
//   print("Name is $name");
// }


//* 10. null এবং null safety
//* ডাৰ্টত কোনো ভেৰিয়েবল null মান (মানে কোনো মান নাই) সংৰক্ষণ কৰিব নোৱাৰে যদি ? ব্যৱহাৰ কৰা নাই। এইটো null safety বুলিও জনা যায়।

//* nullable উদাহৰণ:

// void main() {
//   String? name = null; // null মান ৰাখিব পাৰে
//   print(name);
// }



//* ডাটা টাইপৰ সুবিধা (Advantages of Data Types in Dart):
// টাইপ সুৰক্ষিত (Type Safety): ভুল টাইপৰ মান সন্নিৱিষ্ট হ'লে ত্ৰুটি দেখুৱায়।
// পঢ়া সহজ: ভেৰিয়েবলে কিহৰ বাবে ব্যৱহৃত হ’ব স্পষ্ট কৰে।
// মেম'ৰি ব্যৱস্থাপনা: প্ৰয়োজন অনুসৰি মেম'ৰি সংৰক্ষণ কৰে।
// ডাৰ্টৰ ডাটা টাইপসকল ব্যৱহাৰ কৰিলে প্ৰোগ্ৰামিং শক্তিশালী আৰু সুগঠিত হয়।
