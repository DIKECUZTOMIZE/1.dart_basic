//*ডার্ট (Dart) ভাষাত "মাল্টিলেভেল" বুলিলে সাধাৰণতে আমাৰ উদ্দেশ্য হ'ল একাধিক স্তৰৰ (level) শ্রেণী বা ইনহেৰিটেন্স। ডার্টত মাল্টিলেভেল ইনহেৰিটেন্সৰ অৰ্থ হৈছে একাধিক ক্লাছৰ পৰা গুণাবলী বা বৈশিষ্ট্যৰ (properties) উত্তৰণ। এই বিষয়টো বুজাৰ বাবে, আমি প্ৰথমে ইনহেৰিটেন্সৰ মূলধাৰা বুজা আৰু তাৰপিছত মাল্টিলেভেল ইনহেৰিটেন্সৰ এক উদাহৰণ চাব।

//*1. ইনহেৰিটেন্স কি?
//ইনহেৰিটেন্স হৈছে এক ধরনের বৈশিষ্ট্য, য'ত এক ক্লাছ (subclass বা derived class) আন এক ক্লাছৰ (superclass বা base class) বৈশিষ্ট্য আৰু মেথডসকল লাভ কৰে। ই সাধাৰণতে কোডৰ পুনঃব্যৱহাৰ (code reuse) আৰু ডাটা মডেলিংৰ বাবে ব্যৱহৃত হয়।

//*2. মাল্টিলেভেল ইনহেৰিটেন্স কি?
//মাল্টিলেভেল ইনহেৰিটেন্স হৈছে এক ইনহেৰিটেন্সৰ প্ৰকাৰ, য'ত এক ক্লাছ (subclass) আন এক ক্লাছৰ পৰা গুণাবলী লাভ কৰে, আৰু সেয়া অন্য এক ক্লাছৰ পৰা অধিক গুণাবলী লাভ কৰে। অৰ্থাৎ, একাধিক স্তৰে ইনহেৰিটেন্স চলে।

//উদাহৰণৰ সহায়ত বুজা:
//ধৰোঁ, আমাৰ এটি ডাৰ্ট প্রোগ্ৰাম আছে, য'ত Animal নামৰ superclass আছে আৰু ইয়াৰ পৰা Mammal আৰু Bird নামৰ দুখন subclass ইনহেৰিট কৰে। তাৰপিছত, Dog আৰু Eagle নামৰ ক্লাছসমূহ মাল্টিলেভেল ইনহেৰিটেন্সৰ সাহায্যে এই subclassৰ পৰা গুণাবলী লাভ কৰে।

//// Superclass (Base class)
//class Animal {
//void eat() {
//print("Animal is eating");
//}
//}

//// First level subclass
//class Mammal extends Animal {
//void breathe() {
//print("Mammal is breathing");
//}
//}

//// Second level subclass
//class Dog extends Mammal {
//void bark() {
//print("Dog is barking");
//}
//}

//void main() {
//var dog = Dog();
//dog.eat();      // Animal class method
//dog.breathe();  // Mammal class method
//dog.bark();     // Dog class method
//}

//*ব্যাখ্যা:
//Animal হৈছে superclass (base class), য'ত এটা মেথড আছে eat(), যি সকলো প্ৰাণীই কৰিব পাৰে।
//Mammal হৈছে superclassৰ পৰা ইনহেৰিট কৰা subclass। ইয়াত এটি নতুন মেথড breathe() আছে, যি সৰ্বস্বীকৃত স্তৰলৈ বাচল কৰে।
//Dog হৈছে দ্বিতীয় স্তৰৰ subclass যি Mammalৰ পৰা ইনহেৰিট কৰিছে। ইয়াত নতুন মেথড bark() আছে।


//*এই উদাহৰণৰ মাধ্যমে দেখিবলৈ পোৱা যায়:
//Dog ক্লাছটোৱে Mammalৰ গুণাবলী (মেথড breathe()) লাভ কৰিছে।
//Mammal ক্লাছটোৱে Animalৰ গুণাবলী (মেথড eat()) লাভ কৰিছে।
//সেয়ে Dog ক্লাছটোৱে তিনিটা মেথডই ব্যৱহাৰ কৰিব পাৰে: eat(), breathe(), আৰু bark()।


//*মাল্টিলেভেল ইনহেৰিটেন্সৰ সুবিধাসমূহ:
//কোড পুনঃব্যৱহাৰ: একে কোড একাধিক ক্লাছৰ ভিতৰত পুনৰ ব্যৱহাৰ কৰিব পৰা যায়, যাৰ ফলত কোডৰ আকাৰ সৰু হয়।
//প্ৰাৰম্ভিক ক্লাছৰ পৰা উদ্ভৱ: একাধিক স্তৰৰ ইষ্টাৰ্নালি সম্পর্কিত গুণাবলী সহজে পৰিচালিত হয়।


//*সতৰ্কতা:
//ডাৰ্টত একে সময়তে একাধিক ক্লাছৰ পৰা ইনহেৰিট কৰা বা মাল্টিপল ইনহেৰিটেন্স নাই। এজন ক্লাছৰ পৰা একাধিক ইনহেৰিটেন্সৰ ওপৰত মাল্টিলেভেল ইনহেৰিটেন্সৰ সীমা থাকে।
//এইদৰে, ডাৰ্টৰ মাল্টিলেভেল ইনহেৰিটেন্সে কোডৰ সংগঠন, পুনঃব্যৱহাৰ আৰু ধাৰাবাহিকতা সুনিশ্চিত কৰে।