//ডাৰ্ট (Dart) ত **List** হৈছে একধৰণৰ ক’লেকশ্যন টাইপ য’ত একাধিক মান (values) সঞ্চিত থাকে। লিষ্টৰ ভিতৰত সঞ্চিত মানবোৰৰ **অর্ডাৰ** থাকে, আৰু সেয়াৰ ইণ্ডেক্স (index) থাকে। ই ডুপ্লিকেট মান সঞ্চয় কৰাৰ অনুমতি দিয়ে আৰু একে সময়ত একাধিক মান সঞ্চিত হ'ব পাৰে। ডাৰ্টত লিষ্টৰ অনেক ধৰণৰ মেথড আৰু অপাৰেশ্যন উপলব্ধ থাকে, যাৰ মাধ্যমে তুমি লিষ্টৰ ভিতৰত উপাদান যোগ, মুছা, সন্নিবিষ্ট কৰা, সান্নিধ্য কৰা ইত্যাদি কাজ কৰিব পাৰা।
//
//এই উত্তৰত আমি ডাৰ্টৰ **List**ৰ বিষয়ে বিস্তারিত আলোচনা কৰিম।
//
//*### **List ৰ মৌলিক ধারণা (Basic Concept of List)**
//
//ডাৰ্টত **List** হৈছে এক অর্ডাৰ কৰা ক’লেকশ্যন (collection) য’ত তুমি একাধিক মান সঞ্চয় কৰিব পাৰা। লিষ্টৰ মূখ্য বৈশিষ্ট্যসমূহ হৈছে:
//
//1. **অর্ডাৰ**: লিষ্টত উপাদানবোৰৰ সুনিৰ্দিষ্ট অর্ডাৰ থাকে। প্ৰত্যেক উপাদানৰ এক ইণ্ডেক্স থাকে (যাৰ সূচনা ০ৰ পৰা হয়)।
//2. **ডুপ্লিকেট মান**: লিষ্টত একে মানৰ পুনৰাবৃত্তি কৰিব পাৰি।
//3. **মিউটেবল আৰু ইমিউটেবল**: লিষ্টৰ মান সলনি কৰিব পৰা যায় (যদি লিষ্ট মিউটেবল হয়), আৰু ইমিউটেবল লিষ্টৰ মান সলনি কৰিব নোৱাৰি।
//
//লিষ্টৰ ব্যৱহাৰ সাধাৰণতে তলত থকা দৰে:
//

//List<Datatype> listName = [value1, value2, value3];
//```
//
//*### **List সৃষ্টিৰ উপায় (Ways to Create List)**
//
//ডাৰ্টত লিষ্ট সৃষ্টি কৰাৰ কিছুমান উপায় আছে:
//
//*1. **ডাইৰেক্ট লিষ্ট সৃষ্টি (Direct List Creation)**
//
//```dart
//void main() {
//List<int> numbers = [10, 20, 30, 40];
//print(numbers);  // আউটপুটঃ [10, 20, 30, 40]
//}
//```
//
//*2. **লিষ্টৰ কন্সট্ৰাক্টৰ ব্যৱহাৰ (Using Constructor)**
//
//লিষ্টৰ কন্সট্ৰাক্টৰ ব্যৱহাৰ কৰি লিষ্ট সৃষ্টি কৰা যায়।
//
//```dart
//void main() {
//List<int> numbers = List.filled(5, 0);  // 5টি উপাদানৰ সৈতে 0 দিয়ে পূৰ্ণ লিষ্ট
//print(numbers);  // আউটপুটঃ [0, 0, 0, 0, 0]
//}
//```
//
//*3. **এম্পটি লিষ্ট সৃষ্টি (Empty List Creation)**
//
//```dart
//void main() {
//List<String> names = [];
//names.add('John');
//names.add('Sara');
//print(names);  // আউটপুটঃ [John, Sara]
//}
//```
//
//*### **List ৰ মূখ্য মেথড আৰু অপাৰেশ্যন (Key Methods and Operations of List)**
//

//ডাৰ্টৰ লিষ্টৰ ওপৰত কিছু সাধাৰণ মেথড আৰু অপাৰেশ্যন ব্যৱহাৰ কৰিব পাৰা। এই মেথডসমূহৰ মাধ্যমে তুমি লিষ্টত উপাদান যোগ, মুছা, পৰিবৰ্তন, আৰু অনুসন্ধান কৰিব পাৰা।
//
//1. **add()**: নতুন উপাদান লিষ্টত যোগ কৰা
//
//```dart
//void main() {
//List<int> numbers = [10, 20, 30];
//numbers.add(40);  // নতুন মান যোগ কৰো
//print(numbers);  // আউটপুটঃ [10, 20, 30, 40]
//}
//```
//
//2. **addAll()**: একাধিক উপাদান লিষ্টত যোগ কৰা
//
//```dart
//void main() {
//List<int> numbers = [1, 2, 3];
//numbers.addAll([4, 5, 6]);  // একাধিক মান যোগ কৰা
//print(numbers);  // আউটপুটঃ [1, 2, 3, 4, 5, 6]
//}
//```
//
//3. **insert()**: বিশেষ ইণ্ডেক্সত উপাদান সন্নিবিষ্ট কৰা
//
//```dart
//void main() {
//List<int> numbers = [10, 30, 40];
//numbers.insert(1, 20);  // ইণ্ডেক্স 1 ত 20 সন্নিবিষ্ট
//print(numbers);  // আউটপুটঃ [10, 20, 30, 40]
//}
//```
//
//4. **insertAll()**: একাধিক উপাদান একে সময়ত সন্নিবিষ্ট কৰা
//
//```dart
//void main() {
//List<int> numbers = [10, 40];
//numbers.insertAll(1, [20, 30]);  // ইণ্ডেক্স 1 ত 20 আৰু 30 সন্নিবিষ্ট
//print(numbers);  // আউটপুটঃ [10, 20, 30, 40]
//}
//```
//
//5. **remove()**: লিষ্টৰ পৰা প্ৰথম সন্মিলিত উপাদান মুছা
//
//```dart
//void main() {
//List<int> numbers = [10, 20, 30];
//numbers.remove(20);  // 20 মুচি পেলোৱা
//print(numbers);  // আউটপুটঃ [10, 30]
//}
//```
//
//6. **removeAt()**: ইণ্ডেক্সৰ ভিত্তিত উপাদান মুছা
//
//```dart
//void main() {
//List<int> numbers = [10, 20, 30];
//numbers.removeAt(1);  // ইণ্ডেক্স 1 ত থকা মান মুছা
//print(numbers);  // আউটপুটঃ [10, 30]
//}
//```
//
//7. **clear()**: লিষ্টৰ সকলো উপাদান মুছা
//
//```dart
//void main() {
//List<int> numbers = [10, 20, 30];
//numbers.clear();  // সকলো উপাদান মুছা
//print(numbers);  // আউটপুটঃ []
//}
//```
//
//8. **contains()**: লিষ্টত কোনো উপাদান থকা নে নাই পৰীক্ষা কৰা
//
//```dart
//void main() {
//List<int> numbers = [10, 20, 30];
//bool contains20 = numbers.contains(20);
//print(contains20);  // আউটপুটঃ true
//}
//```
//
//9. **length**: লিষ্টৰ উপাদানৰ সংখ্যা পৰীক্ষা কৰা
//

//void main() {
//List<int> numbers = [10, 20, 30];
//print(numbers.length);  // আউটপুটঃ 3
//}
//```
//
//10. **forEach()**: লিষ্টৰ সকলো উপাদানৰ ওপৰত ফাংশন প্ৰয়োগ কৰা
//
//```dart
//void main() {
//List<int> numbers = [10, 20, 30];
//numbers.forEach((element) {
//print(element);  // আউটপুটঃ 10 20 30
//});
//}
//```
//
//*### **List ৰ ইণ্ডেক্স (Indexing in List)**
//
//লিষ্টৰ উপাদানবোৰ ইণ্ডেক্সৰ মাধ্যমে সঁচা হয়। ডাৰ্টত, লিষ্টৰ ইণ্ডেক্স ০ৰ পৰা আৰম্ভ হয়।
//
//```dart
//void main() {
//List<String> names = ['John', 'Sara', 'Alex'];
//print(names[0]);  // আউটপুটঃ John
//print(names[2]);  // আউটপুটঃ Alex
//}
//```
//
//*### **List ৰ অর্ডাৰ (Ordering in List)**
//
//লিষ্টৰ ভিতৰত মানবোৰ অর্ডাৰিত থাকে আৰু ইণ্ডেক্সৰ মাধ্যমে ইবোৰ এক্সেছ কৰিব পাৰি। তুমি `sort()` মেথডৰ মাধ্যমে লিষ্টৰ উপাদানবোৰ সৰ্ত্ত অনুসৰি সাজিবলৈ ব্যৱহাৰ কৰিব পাৰা।
//
//```dart
//void main() {
//List<int> numbers = [10, 30, 20, 40];
//numbers.sort();
//print(numbers);  // আউটপুটঃ [10, 20, 30, 40]
//}
//```
//
//*### **Conclusion (সাৰাংশ)**
//
//ডাৰ্টৰ **List** হৈছে এক বহুল ব্যবহৃত ক’লেকশ্যন টাইপ, য’ত একাধিক উপাদান সঞ্চিত থাকে। লিষ্টৰ মাধ্যৰে তুমি একে ধৰণৰ বা ভিন্ন ধৰণৰ মান সঞ্চয়, পৰিবৰ্তন আৰু প্ৰক্ৰিয়া কৰিব পাৰা। লিষ্টৰ মাধ্যৰে তুমি অধিক নমনীয় আৰু শক্তিশালী ডাটা সংৰক্ষণৰ ব্যৱস্থা কৰিব পাৰা।
//
//ডাৰ্টত লিষ্টৰ বিভিন্ন মেথড আৰু অপাৰেশ্যন, যেনে `add()`, `remove()`, `insert()`, `clear()` ইত্যাদি, তোমাৰ কোডক অধিক সুবিধাজনক আৰু পাৰদৰ্শী কৰি তোলে।